@model BiblioCat.Models.Author.AuthorDetail

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>AuthorDetail</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.AuthorId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AuthorId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Patreon)
        </dt>

        <dd>
            <a href="@Html.DisplayFor(model => model.Patreon)" target="_blank">@Html.DisplayFor(model => model.Patreon)</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OfficialWebsite)
        </dt>

        <dd>
            <a href="@Html.DisplayFor(model => model.OfficialWebsite)" target="_blank">@Html.DisplayFor(model => model.OfficialWebsite)</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AmazonPage)
        </dt>

        <dd>
            <a href="@Html.DisplayFor(model => model.AmazonPage)" target="_blank">@Html.DisplayFor(model => model.AmazonPage)</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GoodreadsPage)
        </dt>

        <dd>
            <a href="@Html.DisplayFor(model => model.GoodreadsPage)" target="_blank">@Html.DisplayFor(model => model.GoodreadsPage)</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TwitterHandle)
        </dt>

        <dd>
            <a href="@Html.DisplayFor(model => model.TwitterHandle)" target="_blank">@Html.DisplayFor(model => model.TwitterHandle)</a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BooksByAuthor)
        </dt>        
        @foreach (var item in Model.BooksByAuthor)
        {
            <dd>
                @Html.DisplayFor(modelItem => item.Title)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.SeriesWritten)
        </dt>
        @foreach (var item in Model.SeriesWritten)
        {
            <dd>
                @Html.DisplayFor(modelItem => item.SeriesName)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.PublishedBy)
        </dt>
        @foreach (var item in Model.PublishedBy)
        {
            <dd>
                @Html.DisplayFor(modelItem => item.PublisherName)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.ConventionsAttending)
        </dt>
        @foreach (var item in Model.ConventionsAttending)
        {
            <dd>
                @Html.DisplayFor(modelItem => item.Name)
            </dd>
        }

    </dl>
</div>
<br />
<br />
<br />
<br />
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.AuthorId }) |
    @Html.ActionLink("Back to List", "Index") |
    @Html.ActionLink("Add Books to Author", "AddBooks", "AuthorBook") |
    @Html.ActionLink("Remove Books from Author", "RemoveBooks", "AuthorBook") <br />
    @Html.ActionLink("Add Conventions to Author", "AddConventions", "AuthorConvention") |
    @Html.ActionLink("Remove Conventions from Author", "RemoveConventions", "AuthorConvention") <br />
    @Html.ActionLink("Add Publishers to Author", "AddPublishers", "AuthorPublisher") |
    @Html.ActionLink("Remove Publishers from Author", "RemovePublishers", "AuthorPublisher") <br />
    @Html.ActionLink("Add Series to Author", "AddSeries", "SeriesAuthor") |
    @Html.ActionLink("Remove Series from Author", "RemoveSeries", "SeriesAuthor")
</p>


